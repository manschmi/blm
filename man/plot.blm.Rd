% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/blm.R
\name{plot.blm}
\alias{plot.blm}
\title{Plot of a Bayesian Linear Model Fit}
\usage{
\method{plot}{blm}(x, explanatory = NULL, show_blm_interval = TRUE,
  blm_interval_level = 0.95, expand_fit = TRUE, blm_parm = list(col =
  "blue", lty = 1), blm_interval_parm = list(col = "blue", lty = 2),
  show_lm = TRUE, lm_parm = list(col = "red", lty = 2),
  show_legend = TRUE, xlab, ylab, ...)
}
\arguments{
\item{x}{a blm object.}

\item{explanatory}{name of the explanatory variable to be plotted on the x 
axis.}

\item{show_blm_interval}{display interval of the blm fitted values?}

\item{blm_interval_level}{level for the interval of the distribution of response to be
shown.}

\item{expand_fit}{expand fit lines to the limits of the plot?}

\item{blm_parm}{named list of parameters for plotting of the blm fit lines.}

\item{show_lm}{display the regular lm fit on the plot?}

\item{lm_parm}{plot parameters for the lm fit line.}

\item{show_legend}{add a legend for the fit lines to the plot?}

\item{xlab}{label for the x axis.}

\item{ylab}{label for the y axis.}

\item{...}{other arguments passed to plot.}

\item{blm_fit_parm}{named list of parameters for plotting of the blm fit interval lines.}
}
\description{
Plots the blm object along with the MAP fit line and quantiles for the fit.
}
\details{
Plots the data points used to create the \code{\link{blm}} object, 
  together with the blm fit, 95% quanitle of the blm fit and the 
  (frequentist) lm fit. \itemize{ \item \code{explanatory} can be used to
  specify what parameter is to be plotted on the x axis. This can be useful
  ie when plotting models with a 'pure' explanatory ie y~sin(x); where 'x' is
  not part of the model. \item providing \code{explanatory = 'x'} will
  produce the correct output for such models. \item \code{expand_fit} shows fit lines and extend to plot limits, otherwise the fit is only shown for the range covered by the data. \item \code{fit_legend_param} a list (of lists) of parameters to customize the legend. The first item in each slot targets the lm fit line (if present), the second paramter the blm fit line and the third paramter the interval lines for the blm fit.}
}
\examples{
x <- rnorm(100)
b <- 1.3
w0 <- 0.2 ; w1 <- 3 ; w2 <- 10

y <- rnorm(100, mean = w0 + w1 * x + w2 *sin(x), sd = sqrt(1/b))
model <- blm(y ~ x + sin(x), prior = NULL, beta = b, 
               data = data.frame(x=x, y=y))

plot(model, xlim=c(-10,10))


##need to do more in case of complex model that does not contain a term 'x'
y <- rnorm(100, mean = w0 + w1 * cos(x), sd = sqrt(1/b))
model <- blm(y ~ cos(x), prior = NULL, beta = b, 
             data = data.frame(x=x, y=y))

\dontrun{
#plots y~cos(x) on the x-axis and this does probably not produce the plot we
want.
plot(model, xlim=c(-10,10))
}

#we can specify that we want 'x' and not 'cos(x)' by providing the name of
# the explanatory and we get the correct results
plot(model, explanatory='x', xlim=c(-10,10))


#response and explanatory names do not matter
z_not_x <- rnorm(100)
b <- 1.3
w0 <- 0.2 ; w1 <- 3 ; w2 <- 10

v_not_y <- rnorm(100, mean = w0 + w1 * z_not_x + w2 *sin(z_not_x), sd = sqrt(1/b))
model <- blm(v_not_y ~ z_not_x + sin(z_not_x), prior = NULL, beta = b, 
               data = data.frame(z_not_x=z_not_x, v_not_y=v_not_y))

plot(model)

#customizing the plot, almost anything is possible
plot(model, col='purple', pch=19, cex=.3, type='p')
plot(model, col='purple', pch=19, cex=.3, xlim=c(-10,10), ylim=c(-50,50))
plot(model, col='purple', pch=19, cex=.3, xlim=c(-10,10), ylim=c(-50,50), 
     expand_fit=F)

#customizing the legend
 plot(model, show_fit_legend=FALSE)
 plot(model, blm_param=list(cex=.5))

}

